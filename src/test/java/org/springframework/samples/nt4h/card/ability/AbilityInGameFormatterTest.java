package org.springframework.samples.nt4h.card.ability;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertSame;
import static org.mockito.Mockito.any;
import static org.mockito.Mockito.verify;
import static org.mockito.Mockito.when;

import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.Locale;

import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.mock.mockito.MockBean;
import org.springframework.samples.nt4h.card.enemy.Enemy;
import org.springframework.samples.nt4h.card.enemy.EnemyInGame;
import org.springframework.samples.nt4h.card.hero.Role;
import org.springframework.samples.nt4h.card.product.Product;
import org.springframework.samples.nt4h.card.product.ProductInGame;
import org.springframework.samples.nt4h.card.product.StateProduct;
import org.springframework.samples.nt4h.game.Accessibility;
import org.springframework.samples.nt4h.game.Game;
import org.springframework.samples.nt4h.game.Mode;
import org.springframework.samples.nt4h.player.Player;
import org.springframework.samples.nt4h.statistic.Statistic;
import org.springframework.samples.nt4h.turn.Phase;
import org.springframework.samples.nt4h.turn.Turn;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit.jupiter.SpringExtension;

@ContextConfiguration(classes = {AbilityInGameFormatter.class})
@ExtendWith(SpringExtension.class)
class AbilityInGameFormatterTest {
    @Autowired
    private AbilityInGameFormatter abilityInGameFormatter;

    @MockBean
    private AbilityService abilityService;

    @Test
    void testParse() {
        Ability ability = new Ability();
        ability.setAttack(1);
        ability.setBackImage("Back Image");
        ability.setFrontImage("Front Image");
        ability.setId(1);
        ability.setMaxUses(3);
        ability.setName("Name");
        ability.setPathName("Path Name");
        ability.setQuantity(1);
        ability.setRole(Role.WIZARD);

        Deck deck = new Deck();
        deck.setId(1);
        deck.setInDeck(new ArrayList<>());
        deck.setInDiscard(new ArrayList<>());
        deck.setInHand(new ArrayList<>());

        Deck deck1 = new Deck();
        deck1.setId(1);
        deck1.setInDeck(new ArrayList<>());
        deck1.setInDiscard(new ArrayList<>());
        deck1.setInHand(new ArrayList<>());

        Game game = new Game();
        game.setAccessibility(Accessibility.PUBLIC);
        game.setActualOrcs(new ArrayList<>());
        game.setAlivePlayersInTurnOrder(new ArrayList<>());
        game.setAllOrcsInGame(new ArrayList<>());
        game.setCurrentPlayer(new Player());
        game.setCurrentTurn(new Turn());
        game.setFinishDate(null);
        game.setId(1);
        game.setMaxPlayers(3);
        game.setMode(Mode.UNI_CLASS);
        game.setName("Name");
        game.setPassiveOrcs(new ArrayList<>());
        game.setPassword("iloveyou");
        game.setPlayers(new ArrayList<>());
        game.setSpectators(new ArrayList<>());
        game.setStartDate(null);
        game.setStatistic(new Statistic());

        Statistic statistic = new Statistic();
        statistic.setDamageDealt(1);
        statistic.setGlory(1);
        statistic.setGold(1);
        statistic.setId(1);
        statistic.setNumOrcsKilled(10);
        statistic.setNumPlayedGames(10);
        statistic.setNumPlayers(10);
        statistic.setNumWarLordKilled(10);
        statistic.setNumWonGames(10);
        statistic.setTimePlayed(1);

        Player player = new Player();
        player.setAlive(true);
        player.setBirthDate(LocalDate.ofEpochDay(1L));
        player.setDamageProtect(1);
        player.setDeck(deck1);
        player.setGame(game);
        player.setHasEvasion(true);
        player.setHeroes(new ArrayList<>());
        player.setHost(true);
        player.setId(1);
        player.setName("Name");
        player.setNextPhase(Phase.START);
        player.setReady(true);
        player.setSequence(1);
        player.setStatistic(statistic);
        player.setTurns(new ArrayList<>());
        player.setWounds(1);

        AbilityInGame abilityInGame = new AbilityInGame();
        abilityInGame.setAbility(new Ability());
        abilityInGame.setAbilityCardType(AbilityCardType.WARRIOR);
        abilityInGame.setAttack(1);
        abilityInGame.setId(1);
        abilityInGame.setPlayer(new Player());
        abilityInGame.setProduct(true);
        abilityInGame.setProductInGame(new ProductInGame());
        abilityInGame.setTimesUsed(1);

        EnemyInGame enemyInGame = new EnemyInGame();
        enemyInGame.setActualHealth(1);
        enemyInGame.setEnemy(new Enemy());
        enemyInGame.setId(1);
        enemyInGame.setNightLord(true);

        ProductInGame productInGame = new ProductInGame();
        productInGame.setGame(new Game());
        productInGame.setId(1);
        productInGame.setName("Name");
        productInGame.setPlayer(new Player());
        productInGame.setProduct(new Product());
        productInGame.setStateProduct(StateProduct.IN_SALE);
        productInGame.setTimesUsed(1);

        Game game1 = new Game();
        game1.setAccessibility(Accessibility.PUBLIC);
        game1.setActualOrcs(new ArrayList<>());
        game1.setAlivePlayersInTurnOrder(new ArrayList<>());
        game1.setAllOrcsInGame(new ArrayList<>());
        game1.setCurrentPlayer(new Player());
        game1.setCurrentTurn(new Turn());
        game1.setFinishDate(null);
        game1.setId(1);
        game1.setMaxPlayers(3);
        game1.setMode(Mode.UNI_CLASS);
        game1.setName("Name");
        game1.setPassiveOrcs(new ArrayList<>());
        game1.setPassword("iloveyou");
        game1.setPlayers(new ArrayList<>());
        game1.setSpectators(new ArrayList<>());
        game1.setStartDate(null);
        game1.setStatistic(new Statistic());

        Player player1 = new Player();
        player1.setAlive(true);
        player1.setBirthDate(null);
        player1.setDamageProtect(1);
        player1.setDeck(new Deck());
        player1.setGame(new Game());
        player1.setHasEvasion(true);
        player1.setHeroes(new ArrayList<>());
        player1.setHost(true);
        player1.setId(1);
        player1.setName("Name");
        player1.setNextPhase(Phase.START);
        player1.setReady(true);
        player1.setSequence(1);
        player1.setStatistic(new Statistic());
        player1.setTurns(new ArrayList<>());
        player1.setWounds(1);

        Turn turn = new Turn();
        turn.setCurrentAbility(abilityInGame);
        turn.setCurrentEnemy(enemyInGame);
        turn.setCurrentProduct(productInGame);
        turn.setGame(game1);
        turn.setId(1);
        turn.setPhase(Phase.START);
        turn.setPlayer(player1);
        turn.setUsedAbilities(new ArrayList<>());
        turn.setUsedEnemies(new ArrayList<>());
        turn.setUsedProducts(new ArrayList<>());

        Statistic statistic1 = new Statistic();
        statistic1.setDamageDealt(1);
        statistic1.setGlory(1);
        statistic1.setGold(1);
        statistic1.setId(1);
        statistic1.setNumOrcsKilled(10);
        statistic1.setNumPlayedGames(10);
        statistic1.setNumPlayers(10);
        statistic1.setNumWarLordKilled(10);
        statistic1.setNumWonGames(10);
        statistic1.setTimePlayed(1);

        Game game2 = new Game();
        game2.setAccessibility(Accessibility.PUBLIC);
        game2.setActualOrcs(new ArrayList<>());
        game2.setAlivePlayersInTurnOrder(new ArrayList<>());
        game2.setAllOrcsInGame(new ArrayList<>());
        game2.setCurrentPlayer(player);
        game2.setCurrentTurn(turn);
        game2.setFinishDate(LocalDateTime.of(1, 1, 1, 1, 1));
        game2.setId(1);
        game2.setMaxPlayers(3);
        game2.setMode(Mode.UNI_CLASS);
        game2.setName("Name");
        game2.setPassiveOrcs(new ArrayList<>());
        game2.setPassword("iloveyou");
        game2.setPlayers(new ArrayList<>());
        game2.setSpectators(new ArrayList<>());
        game2.setStartDate(LocalDateTime.of(1, 1, 1, 1, 1));
        game2.setStatistic(statistic1);

        Statistic statistic2 = new Statistic();
        statistic2.setDamageDealt(1);
        statistic2.setGlory(1);
        statistic2.setGold(1);
        statistic2.setId(1);
        statistic2.setNumOrcsKilled(10);
        statistic2.setNumPlayedGames(10);
        statistic2.setNumPlayers(10);
        statistic2.setNumWarLordKilled(10);
        statistic2.setNumWonGames(10);
        statistic2.setTimePlayed(1);

        Player player2 = new Player();
        player2.setAlive(true);
        player2.setBirthDate(LocalDate.ofEpochDay(1L));
        player2.setDamageProtect(1);
        player2.setDeck(deck);
        player2.setGame(game2);
        player2.setHasEvasion(true);
        player2.setHeroes(new ArrayList<>());
        player2.setHost(true);
        player2.setId(1);
        player2.setName("Name");
        player2.setNextPhase(Phase.START);
        player2.setReady(true);
        player2.setSequence(1);
        player2.setStatistic(statistic2);
        player2.setTurns(new ArrayList<>());
        player2.setWounds(1);

        Deck deck2 = new Deck();
        deck2.setId(1);
        deck2.setInDeck(new ArrayList<>());
        deck2.setInDiscard(new ArrayList<>());
        deck2.setInHand(new ArrayList<>());

        Game game3 = new Game();
        game3.setAccessibility(Accessibility.PUBLIC);
        game3.setActualOrcs(new ArrayList<>());
        game3.setAlivePlayersInTurnOrder(new ArrayList<>());
        game3.setAllOrcsInGame(new ArrayList<>());
        game3.setCurrentPlayer(new Player());
        game3.setCurrentTurn(new Turn());
        game3.setFinishDate(null);
        game3.setId(1);
        game3.setMaxPlayers(3);
        game3.setMode(Mode.UNI_CLASS);
        game3.setName("Name");
        game3.setPassiveOrcs(new ArrayList<>());
        game3.setPassword("iloveyou");
        game3.setPlayers(new ArrayList<>());
        game3.setSpectators(new ArrayList<>());
        game3.setStartDate(null);
        game3.setStatistic(new Statistic());

        Statistic statistic3 = new Statistic();
        statistic3.setDamageDealt(1);
        statistic3.setGlory(1);
        statistic3.setGold(1);
        statistic3.setId(1);
        statistic3.setNumOrcsKilled(10);
        statistic3.setNumPlayedGames(10);
        statistic3.setNumPlayers(10);
        statistic3.setNumWarLordKilled(10);
        statistic3.setNumWonGames(10);
        statistic3.setTimePlayed(1);

        Player player3 = new Player();
        player3.setAlive(true);
        player3.setBirthDate(LocalDate.ofEpochDay(1L));
        player3.setDamageProtect(1);
        player3.setDeck(deck2);
        player3.setGame(game3);
        player3.setHasEvasion(true);
        player3.setHeroes(new ArrayList<>());
        player3.setHost(true);
        player3.setId(1);
        player3.setName("Name");
        player3.setNextPhase(Phase.START);
        player3.setReady(true);
        player3.setSequence(1);
        player3.setStatistic(statistic3);
        player3.setTurns(new ArrayList<>());
        player3.setWounds(1);

        AbilityInGame abilityInGame1 = new AbilityInGame();
        abilityInGame1.setAbility(new Ability());
        abilityInGame1.setAbilityCardType(AbilityCardType.WARRIOR);
        abilityInGame1.setAttack(1);
        abilityInGame1.setId(1);
        abilityInGame1.setPlayer(new Player());
        abilityInGame1.setProduct(true);
        abilityInGame1.setProductInGame(new ProductInGame());
        abilityInGame1.setTimesUsed(1);

        EnemyInGame enemyInGame1 = new EnemyInGame();
        enemyInGame1.setActualHealth(1);
        enemyInGame1.setEnemy(new Enemy());
        enemyInGame1.setId(1);
        enemyInGame1.setNightLord(true);

        ProductInGame productInGame1 = new ProductInGame();
        productInGame1.setGame(new Game());
        productInGame1.setId(1);
        productInGame1.setName("Name");
        productInGame1.setPlayer(new Player());
        productInGame1.setProduct(new Product());
        productInGame1.setStateProduct(StateProduct.IN_SALE);
        productInGame1.setTimesUsed(1);

        Game game4 = new Game();
        game4.setAccessibility(Accessibility.PUBLIC);
        game4.setActualOrcs(new ArrayList<>());
        game4.setAlivePlayersInTurnOrder(new ArrayList<>());
        game4.setAllOrcsInGame(new ArrayList<>());
        game4.setCurrentPlayer(new Player());
        game4.setCurrentTurn(new Turn());
        game4.setFinishDate(null);
        game4.setId(1);
        game4.setMaxPlayers(3);
        game4.setMode(Mode.UNI_CLASS);
        game4.setName("Name");
        game4.setPassiveOrcs(new ArrayList<>());
        game4.setPassword("iloveyou");
        game4.setPlayers(new ArrayList<>());
        game4.setSpectators(new ArrayList<>());
        game4.setStartDate(null);
        game4.setStatistic(new Statistic());

        Player player4 = new Player();
        player4.setAlive(true);
        player4.setBirthDate(null);
        player4.setDamageProtect(1);
        player4.setDeck(new Deck());
        player4.setGame(new Game());
        player4.setHasEvasion(true);
        player4.setHeroes(new ArrayList<>());
        player4.setHost(true);
        player4.setId(1);
        player4.setName("Name");
        player4.setNextPhase(Phase.START);
        player4.setReady(true);
        player4.setSequence(1);
        player4.setStatistic(new Statistic());
        player4.setTurns(new ArrayList<>());
        player4.setWounds(1);

        Turn turn1 = new Turn();
        turn1.setCurrentAbility(abilityInGame1);
        turn1.setCurrentEnemy(enemyInGame1);
        turn1.setCurrentProduct(productInGame1);
        turn1.setGame(game4);
        turn1.setId(1);
        turn1.setPhase(Phase.START);
        turn1.setPlayer(player4);
        turn1.setUsedAbilities(new ArrayList<>());
        turn1.setUsedEnemies(new ArrayList<>());
        turn1.setUsedProducts(new ArrayList<>());

        Statistic statistic4 = new Statistic();
        statistic4.setDamageDealt(1);
        statistic4.setGlory(1);
        statistic4.setGold(1);
        statistic4.setId(1);
        statistic4.setNumOrcsKilled(10);
        statistic4.setNumPlayedGames(10);
        statistic4.setNumPlayers(10);
        statistic4.setNumWarLordKilled(10);
        statistic4.setNumWonGames(10);
        statistic4.setTimePlayed(1);

        Game game5 = new Game();
        game5.setAccessibility(Accessibility.PUBLIC);
        game5.setActualOrcs(new ArrayList<>());
        game5.setAlivePlayersInTurnOrder(new ArrayList<>());
        game5.setAllOrcsInGame(new ArrayList<>());
        game5.setCurrentPlayer(player3);
        game5.setCurrentTurn(turn1);
        game5.setFinishDate(LocalDateTime.of(1, 1, 1, 1, 1));
        game5.setId(1);
        game5.setMaxPlayers(3);
        game5.setMode(Mode.UNI_CLASS);
        game5.setName("Name");
        game5.setPassiveOrcs(new ArrayList<>());
        game5.setPassword("iloveyou");
        game5.setPlayers(new ArrayList<>());
        game5.setSpectators(new ArrayList<>());
        game5.setStartDate(LocalDateTime.of(1, 1, 1, 1, 1));
        game5.setStatistic(statistic4);

        Deck deck3 = new Deck();
        deck3.setId(1);
        deck3.setInDeck(new ArrayList<>());
        deck3.setInDiscard(new ArrayList<>());
        deck3.setInHand(new ArrayList<>());

        Player player5 = new Player();
        player5.setAlive(true);
        player5.setBirthDate(null);
        player5.setDamageProtect(1);
        player5.setDeck(new Deck());
        player5.setGame(new Game());
        player5.setHasEvasion(true);
        player5.setHeroes(new ArrayList<>());
        player5.setHost(true);
        player5.setId(1);
        player5.setName("Name");
        player5.setNextPhase(Phase.START);
        player5.setReady(true);
        player5.setSequence(1);
        player5.setStatistic(new Statistic());
        player5.setTurns(new ArrayList<>());
        player5.setWounds(1);

        Turn turn2 = new Turn();
        turn2.setCurrentAbility(new AbilityInGame());
        turn2.setCurrentEnemy(new EnemyInGame());
        turn2.setCurrentProduct(new ProductInGame());
        turn2.setGame(new Game());
        turn2.setId(1);
        turn2.setPhase(Phase.START);
        turn2.setPlayer(new Player());
        turn2.setUsedAbilities(new ArrayList<>());
        turn2.setUsedEnemies(new ArrayList<>());
        turn2.setUsedProducts(new ArrayList<>());

        Statistic statistic5 = new Statistic();
        statistic5.setDamageDealt(1);
        statistic5.setGlory(1);
        statistic5.setGold(1);
        statistic5.setId(1);
        statistic5.setNumOrcsKilled(10);
        statistic5.setNumPlayedGames(10);
        statistic5.setNumPlayers(10);
        statistic5.setNumWarLordKilled(10);
        statistic5.setNumWonGames(10);
        statistic5.setTimePlayed(1);

        Game game6 = new Game();
        game6.setAccessibility(Accessibility.PUBLIC);
        game6.setActualOrcs(new ArrayList<>());
        game6.setAlivePlayersInTurnOrder(new ArrayList<>());
        game6.setAllOrcsInGame(new ArrayList<>());
        game6.setCurrentPlayer(player5);
        game6.setCurrentTurn(turn2);
        game6.setFinishDate(LocalDateTime.of(1, 1, 1, 1, 1));
        game6.setId(1);
        game6.setMaxPlayers(3);
        game6.setMode(Mode.UNI_CLASS);
        game6.setName("Name");
        game6.setPassiveOrcs(new ArrayList<>());
        game6.setPassword("iloveyou");
        game6.setPlayers(new ArrayList<>());
        game6.setSpectators(new ArrayList<>());
        game6.setStartDate(LocalDateTime.of(1, 1, 1, 1, 1));
        game6.setStatistic(statistic5);

        Statistic statistic6 = new Statistic();
        statistic6.setDamageDealt(1);
        statistic6.setGlory(1);
        statistic6.setGold(1);
        statistic6.setId(1);
        statistic6.setNumOrcsKilled(10);
        statistic6.setNumPlayedGames(10);
        statistic6.setNumPlayers(10);
        statistic6.setNumWarLordKilled(10);
        statistic6.setNumWonGames(10);
        statistic6.setTimePlayed(1);

        Player player6 = new Player();
        player6.setAlive(true);
        player6.setBirthDate(LocalDate.ofEpochDay(1L));
        player6.setDamageProtect(1);
        player6.setDeck(deck3);
        player6.setGame(game6);
        player6.setHasEvasion(true);
        player6.setHeroes(new ArrayList<>());
        player6.setHost(true);
        player6.setId(1);
        player6.setName("Name");
        player6.setNextPhase(Phase.START);
        player6.setReady(true);
        player6.setSequence(1);
        player6.setStatistic(statistic6);
        player6.setTurns(new ArrayList<>());
        player6.setWounds(1);

        Product product = new Product();
        product.setAttack(1);
        product.setBackImage("Back Image");
        product.setCapacity(new ArrayList<>());
        product.setFrontImage("Front Image");
        product.setId(1);
        product.setMaxUses(3);
        product.setName("Name");
        product.setPathName("Path Name");
        product.setPrice(1);
        product.setQuantity(1);

        ProductInGame productInGame2 = new ProductInGame();
        productInGame2.setGame(game5);
        productInGame2.setId(1);
        productInGame2.setName("Name");
        productInGame2.setPlayer(player6);
        productInGame2.setProduct(product);
        productInGame2.setStateProduct(StateProduct.IN_SALE);
        productInGame2.setTimesUsed(1);

        AbilityInGame abilityInGame2 = new AbilityInGame();
        abilityInGame2.setAbility(ability);
        abilityInGame2.setAbilityCardType(AbilityCardType.WARRIOR);
        abilityInGame2.setAttack(1);
        abilityInGame2.setId(1);
        abilityInGame2.setPlayer(player2);
        abilityInGame2.setProduct(true);
        abilityInGame2.setProductInGame(productInGame2);
        abilityInGame2.setTimesUsed(1);
        when(abilityService.getAbilityInGameById((Integer) any())).thenReturn(abilityInGame2);
        assertSame(abilityInGame2, abilityInGameFormatter.parse("42", Locale.getDefault()));
        verify(abilityService).getAbilityInGameById((Integer) any());
    }

    @Test
    void testPrint() {
        Ability ability = new Ability();
        ability.setAttack(1);
        ability.setBackImage("Back Image");
        ability.setFrontImage("Front Image");
        ability.setId(1);
        ability.setMaxUses(3);
        ability.setName("Name");
        ability.setPathName("Path Name");
        ability.setQuantity(1);
        ability.setRole(Role.WIZARD);

        Deck deck = new Deck();
        deck.setId(1);
        deck.setInDeck(new ArrayList<>());
        deck.setInDiscard(new ArrayList<>());
        deck.setInHand(new ArrayList<>());

        Player player = new Player();
        player.setAlive(true);
        player.setBirthDate(null);
        player.setDamageProtect(1);
        player.setDeck(new Deck());
        player.setGame(new Game());
        player.setHasEvasion(true);
        player.setHeroes(new ArrayList<>());
        player.setHost(true);
        player.setId(1);
        player.setName("Name");
        player.setNextPhase(Phase.START);
        player.setReady(true);
        player.setSequence(1);
        player.setStatistic(new Statistic());
        player.setTurns(new ArrayList<>());
        player.setWounds(1);

        Turn turn = new Turn();
        turn.setCurrentAbility(new AbilityInGame());
        turn.setCurrentEnemy(new EnemyInGame());
        turn.setCurrentProduct(new ProductInGame());
        turn.setGame(new Game());
        turn.setId(1);
        turn.setPhase(Phase.START);
        turn.setPlayer(new Player());
        turn.setUsedAbilities(new ArrayList<>());
        turn.setUsedEnemies(new ArrayList<>());
        turn.setUsedProducts(new ArrayList<>());

        Statistic statistic = new Statistic();
        statistic.setDamageDealt(1);
        statistic.setGlory(1);
        statistic.setGold(1);
        statistic.setId(1);
        statistic.setNumOrcsKilled(10);
        statistic.setNumPlayedGames(10);
        statistic.setNumPlayers(10);
        statistic.setNumWarLordKilled(10);
        statistic.setNumWonGames(10);
        statistic.setTimePlayed(1);

        Game game = new Game();
        game.setAccessibility(Accessibility.PUBLIC);
        game.setActualOrcs(new ArrayList<>());
        game.setAlivePlayersInTurnOrder(new ArrayList<>());
        game.setAllOrcsInGame(new ArrayList<>());
        game.setCurrentPlayer(player);
        game.setCurrentTurn(turn);
        game.setFinishDate(LocalDateTime.of(1, 1, 1, 1, 1));
        game.setId(1);
        game.setMaxPlayers(3);
        game.setMode(Mode.UNI_CLASS);
        game.setName("Name");
        game.setPassiveOrcs(new ArrayList<>());
        game.setPassword("iloveyou");
        game.setPlayers(new ArrayList<>());
        game.setSpectators(new ArrayList<>());
        game.setStartDate(LocalDateTime.of(1, 1, 1, 1, 1));
        game.setStatistic(statistic);

        Statistic statistic1 = new Statistic();
        statistic1.setDamageDealt(1);
        statistic1.setGlory(1);
        statistic1.setGold(1);
        statistic1.setId(1);
        statistic1.setNumOrcsKilled(10);
        statistic1.setNumPlayedGames(10);
        statistic1.setNumPlayers(10);
        statistic1.setNumWarLordKilled(10);
        statistic1.setNumWonGames(10);
        statistic1.setTimePlayed(1);

        Player player1 = new Player();
        player1.setAlive(true);
        player1.setBirthDate(LocalDate.ofEpochDay(1L));
        player1.setDamageProtect(1);
        player1.setDeck(deck);
        player1.setGame(game);
        player1.setHasEvasion(true);
        player1.setHeroes(new ArrayList<>());
        player1.setHost(true);
        player1.setId(1);
        player1.setName("Name");
        player1.setNextPhase(Phase.START);
        player1.setReady(true);
        player1.setSequence(1);
        player1.setStatistic(statistic1);
        player1.setTurns(new ArrayList<>());
        player1.setWounds(1);

        Player player2 = new Player();
        player2.setAlive(true);
        player2.setBirthDate(null);
        player2.setDamageProtect(1);
        player2.setDeck(new Deck());
        player2.setGame(new Game());
        player2.setHasEvasion(true);
        player2.setHeroes(new ArrayList<>());
        player2.setHost(true);
        player2.setId(1);
        player2.setName("Name");
        player2.setNextPhase(Phase.START);
        player2.setReady(true);
        player2.setSequence(1);
        player2.setStatistic(new Statistic());
        player2.setTurns(new ArrayList<>());
        player2.setWounds(1);

        Turn turn1 = new Turn();
        turn1.setCurrentAbility(new AbilityInGame());
        turn1.setCurrentEnemy(new EnemyInGame());
        turn1.setCurrentProduct(new ProductInGame());
        turn1.setGame(new Game());
        turn1.setId(1);
        turn1.setPhase(Phase.START);
        turn1.setPlayer(new Player());
        turn1.setUsedAbilities(new ArrayList<>());
        turn1.setUsedEnemies(new ArrayList<>());
        turn1.setUsedProducts(new ArrayList<>());

        Statistic statistic2 = new Statistic();
        statistic2.setDamageDealt(1);
        statistic2.setGlory(1);
        statistic2.setGold(1);
        statistic2.setId(1);
        statistic2.setNumOrcsKilled(10);
        statistic2.setNumPlayedGames(10);
        statistic2.setNumPlayers(10);
        statistic2.setNumWarLordKilled(10);
        statistic2.setNumWonGames(10);
        statistic2.setTimePlayed(1);

        Game game1 = new Game();
        game1.setAccessibility(Accessibility.PUBLIC);
        game1.setActualOrcs(new ArrayList<>());
        game1.setAlivePlayersInTurnOrder(new ArrayList<>());
        game1.setAllOrcsInGame(new ArrayList<>());
        game1.setCurrentPlayer(player2);
        game1.setCurrentTurn(turn1);
        game1.setFinishDate(LocalDateTime.of(1, 1, 1, 1, 1));
        game1.setId(1);
        game1.setMaxPlayers(3);
        game1.setMode(Mode.UNI_CLASS);
        game1.setName("Name");
        game1.setPassiveOrcs(new ArrayList<>());
        game1.setPassword("iloveyou");
        game1.setPlayers(new ArrayList<>());
        game1.setSpectators(new ArrayList<>());
        game1.setStartDate(LocalDateTime.of(1, 1, 1, 1, 1));
        game1.setStatistic(statistic2);

        Deck deck1 = new Deck();
        deck1.setId(1);
        deck1.setInDeck(new ArrayList<>());
        deck1.setInDiscard(new ArrayList<>());
        deck1.setInHand(new ArrayList<>());

        Game game2 = new Game();
        game2.setAccessibility(Accessibility.PUBLIC);
        game2.setActualOrcs(new ArrayList<>());
        game2.setAlivePlayersInTurnOrder(new ArrayList<>());
        game2.setAllOrcsInGame(new ArrayList<>());
        game2.setCurrentPlayer(new Player());
        game2.setCurrentTurn(new Turn());
        game2.setFinishDate(null);
        game2.setId(1);
        game2.setMaxPlayers(3);
        game2.setMode(Mode.UNI_CLASS);
        game2.setName("Name");
        game2.setPassiveOrcs(new ArrayList<>());
        game2.setPassword("iloveyou");
        game2.setPlayers(new ArrayList<>());
        game2.setSpectators(new ArrayList<>());
        game2.setStartDate(null);
        game2.setStatistic(new Statistic());

        Statistic statistic3 = new Statistic();
        statistic3.setDamageDealt(1);
        statistic3.setGlory(1);
        statistic3.setGold(1);
        statistic3.setId(1);
        statistic3.setNumOrcsKilled(10);
        statistic3.setNumPlayedGames(10);
        statistic3.setNumPlayers(10);
        statistic3.setNumWarLordKilled(10);
        statistic3.setNumWonGames(10);
        statistic3.setTimePlayed(1);

        Player player3 = new Player();
        player3.setAlive(true);
        player3.setBirthDate(LocalDate.ofEpochDay(1L));
        player3.setDamageProtect(1);
        player3.setDeck(deck1);
        player3.setGame(game2);
        player3.setHasEvasion(true);
        player3.setHeroes(new ArrayList<>());
        player3.setHost(true);
        player3.setId(1);
        player3.setName("Name");
        player3.setNextPhase(Phase.START);
        player3.setReady(true);
        player3.setSequence(1);
        player3.setStatistic(statistic3);
        player3.setTurns(new ArrayList<>());
        player3.setWounds(1);

        Product product = new Product();
        product.setAttack(1);
        product.setBackImage("Back Image");
        product.setCapacity(new ArrayList<>());
        product.setFrontImage("Front Image");
        product.setId(1);
        product.setMaxUses(3);
        product.setName("Name");
        product.setPathName("Path Name");
        product.setPrice(1);
        product.setQuantity(1);

        ProductInGame productInGame = new ProductInGame();
        productInGame.setGame(game1);
        productInGame.setId(1);
        productInGame.setName("Name");
        productInGame.setPlayer(player3);
        productInGame.setProduct(product);
        productInGame.setStateProduct(StateProduct.IN_SALE);
        productInGame.setTimesUsed(1);

        AbilityInGame abilityInGame = new AbilityInGame();
        abilityInGame.setAbility(ability);
        abilityInGame.setAbilityCardType(AbilityCardType.WARRIOR);
        abilityInGame.setAttack(1);
        abilityInGame.setId(1);
        abilityInGame.setPlayer(player1);
        abilityInGame.setProduct(true);
        abilityInGame.setProductInGame(productInGame);
        abilityInGame.setTimesUsed(1);
        assertEquals("1", abilityInGameFormatter.print(abilityInGame, Locale.getDefault()));
    }
}

